var WebSocketServer = require('ws').Server;

var server = {
    listen : function(port) {
        var wss = new WebSocketServer({port: port});

        var wssProxy = {
            oninternalconnection : function(ws) {
                var wssClientProxy = {
                    oninternalclose : function() {
                        this.onclose({});
                    },
                    oninternalmessage : function(message) {
                        this.onmessage({ data: message});
                    },
                    onclose : function(event) {
                    },
                    onmessage : function(event) {
                    },
                    send : function(message) {
                      ws.send(message);
                    },
                    close : function() {
                      ws.close();
                    },
                    getWss : function() {
                        return ws;
                    },
                    getAddress : function() {
                        return ws._socket.address();
                    },
                    getRemoteAddress : function() {
                        return {address: ws._socket.remoteAddress, port: ws._socket.remotePort };
                    }
                }

                ws.on('close', function() {
                    wssClientProxy.oninternalclose();
                });

                ws.on('message', function(message) {
                    wssClientProxy.oninternalmessage(message);
                });

                this.onconnection(wssClientProxy);
            },

            onconnection : function(client) {

            }

        }

        wss.on('connection', function(ws) {
          wssProxy.oninternalconnection(ws);
        });

        return wssProxy;
    }
}

module.exports.server = server;